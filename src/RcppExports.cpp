// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GECKO
arma::cube GECKO(SEXP n1in, SEXP n2in, SEXP nsin, SEXP LDscorein, SEXP Zscorein, SEXP Annotation_labelin, SEXP Weightin, SEXP Fix_Vein, SEXP Test);
RcppExport SEXP _GECKO_GECKO(SEXP n1inSEXP, SEXP n2inSEXP, SEXP nsinSEXP, SEXP LDscoreinSEXP, SEXP ZscoreinSEXP, SEXP Annotation_labelinSEXP, SEXP WeightinSEXP, SEXP Fix_VeinSEXP, SEXP TestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n1in(n1inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n2in(n2inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nsin(nsinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LDscorein(LDscoreinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zscorein(ZscoreinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Annotation_labelin(Annotation_labelinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Weightin(WeightinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Fix_Vein(Fix_VeinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Test(TestSEXP);
    rcpp_result_gen = Rcpp::wrap(GECKO(n1in, n2in, nsin, LDscorein, Zscorein, Annotation_labelin, Weightin, Fix_Vein, Test));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GECKO_GECKO", (DL_FUNC) &_GECKO_GECKO, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_GECKO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
